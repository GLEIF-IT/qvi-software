# vLEI full chain Docker Compose file with all needed services
# - demo witnesses configured to use host.docker.internal
# - keria configured to use the demo witnesses
# - vLEI server for credential schema caching

x-keri_1_2-image: &keri_1_2-image
  image: gleif/keri:1.2.9
x-keri_1_1-image: &keri_1_1-image
  image: weboftrust/keri:1.1.32

x-witness-demo-image: &witness-demo-image
    image: gleif/keri:1.2.9
x-keria-image: &keria-image
    image: gleif/keria:0.3.0
x-vlei-image: &vlei-image
    image: gleif/vlei:1.0.0
x-sally-image: &sally-image
  image: gleif/sally:1.0.2

x-healthcheck: &healthcheck
    interval: 15s
    timeout: 5s
    retries: 3
    start_period: 2s    

networks:
  default:
    external: true
    name: vlei

volumes:
  wit-vol:
  keria-vol:
  sally-vol:

services:
  # vLEI schema caching server
  vlei-server:
    <<: *vlei-image
    environment:
        - PYTHONUNBUFFERED=1     # Ensure output is logged in real-time
        - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
    command:
      [ 'vLEI-server', "-s", "/vLEI/schema", "-c", "/vLEI/credentials", "-o", "/vLEI/oobis" ]
    healthcheck:
        test: ["CMD", "curl", "-f", "http://127.0.0.1:7723/oobi/EBfdlu8R27Fbx-ehrqwImnK-8Cm79sqbAQ4MmvEAYqao"]
        <<: *healthcheck
    ports:
        - "7723:7723"   

  # Six demo witnesses
  witness-demo:
    <<: *witness-demo-image
    environment:
      - PYTHONUNBUFFERED=1                        # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8                    # Ensure consistent logging encoding
      - PYTHONWARNINGS=ignore::SyntaxWarning      # Ignore regular expression syntax warning
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--tries=1", "--no-verbose", "http://127.0.0.1:5642/oobi" ]
      <<: *healthcheck
    command: witness demo
    volumes:
      - ./config/demo-witnesses:/keripy/scripts/keri/cf/main
      - wit-vol:/usr/local/var/keri
    ports:
      - "5642:5642" # witness named wan
      - "5643:5643" # witness named wil
      - "5644:5644" # witness named wes
      - "5645:5645" # witness named wit
      - "5646:5646" # witness named wub
      - "5647:5647" # witness named wyz
    depends_on:
      vlei-server:
        condition: service_healthy   

  keria:
    <<: *keria-image
    environment:
      - KERI_AGENT_CORS=True   # Enable CORS for the KERI agent
      - PYTHONUNBUFFERED=1     # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
    volumes:
      - ./config/keria/keria-habery-config-docker.json:/keria/config/keri/cf/keria.json
      - keria-vol:/usr/local/var/keri
    command: --config-dir /keria/config --config-file keria --name agent --loglevel INFO
    healthcheck:
      test: ["CMD", "wget", "--spider", "--tries=1", "--no-verbose", "http://127.0.0.1:3902/spec.yaml"]
      <<: *healthcheck
    ports:
      - "3901:3901"
      - "3902:3902"
      - "3903:3903"
    entrypoint:
      ['keria', 'start','--config-dir','/keria/config','--config-file','keria','--name','agent', '--loglevel', 'INFO']
    depends_on:
      vlei-server:
        condition: service_healthy
      witness-demo:
        condition: service_healthy

  # Sample Webhook that will receive IPEX credential presentation bodies as JSON from Sally
  hook:
    <<: *sally-image
    environment:
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
      - PYTHONWARNINGS=ignore::SyntaxWarning
    # volumes:
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--tries=1", "--no-verbose", "http://127.0.0.1:9923/health" ]
      <<: *healthcheck
    ports:
      - "9923:9923"
    entrypoint: [ 'sally', 'hook', 'demo' ]

  # The reporting endpoint service receiving IPEX credential presentations
  sally:
    <<: *sally-image
    environment:
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
      - SALLY_KS_NAME=${INDIRECT_SALLY_KS_NAME}
      - SALLY_SALT=${INDIRECT_SALLY_SALT}
      - SALLY_PASSCODE=${INDIRECT_SALLY_PASSCODE}
      - WEBHOOK_HOST=${WEBHOOK_HOST}
      - GEDA_PRE=${GEDA_PRE}
      - PYTHONWARNINGS=ignore::SyntaxWarning
      - SALLY_PORT=9723
    volumes:
      - ./sally/keri/cf/sally.json:/sally/conf/keri/cf/sally.json
      - ./sally/sally-incept.json:/sally/conf/sally-incept.json
      - ./sally/entry-point.sh:/sally/entry-point.sh
      - sally-vol:/usr/local/var/keri
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--tries=1", "--no-verbose", "http://127.0.0.1:9723/health" ]
      <<: *healthcheck
    ports:
      - 9723:9723
    entrypoint: "/sally/entry-point.sh"
    depends_on:
      hook:
        condition: service_healthy
      vlei-server:
        condition: service_healthy
      witness-demo:
        condition: service_healthy

  kli:
    <<: *keri_1_1-image
    environment:
      - PYTHONUNBUFFERED=1 # Ensure output is logged in real-time
      - PYTHONIOENCODING=UTF-8 # Ensure consistent logging encoding
      - PYTHONWARNINGS=ignore::SyntaxWarning
    env_file:
      - ./vlei-vars.env
    volumes:
      - ${KEYSTORE_DIR:-./docker-keystores}:/usr/local/var/keri
    tty: true
    entrypoint: /bin/bash
    depends_on:
      witness-demo:
        condition: service_healthy
